{"version":3,"sources":["App.js","web-build/register-service-worker.js"],"names":["count","App","useState","value","setValue","todos","setTodos","status","item","edit","setEdit","ref","useRef","style","justifyContent","alignItems","padding","backgroundColor","color","fontSize","fontWeight","styles","container","placeholder","textInput","onChangeText","text","onPress","e","prevTodos","map","id","current","focus","data","keyExtractor","index","toString","renderItem","paddingTop","paddingLeft","paddingRight","flexDirection","display","width","marginRight","editTodo","filter","StyleSheet","create","height","borderBottomWidth","borderBottomStyle","borderBottomColor","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"mOAGIA,EAAQ,EAEG,SAASC,IAAO,IAAD,EAEFC,mBAAS,IAFP,WAErBC,EAFqB,KAEdC,EAFc,OAGFF,mBAAS,IAHP,WAGrBG,EAHqB,KAGdC,EAHc,OAIJJ,mBAAS,CAC/BK,QAAQ,EACRC,KAAM,OANoB,WAIrBC,EAJqB,KAIfC,EAJe,KAStBC,EAAMC,mBA8CZ,OACE,oCACA,kBAAC,IAAD,CAAMC,MAAO,CACVC,eAAgB,SAChBC,WAAY,SACZC,QAAS,GACTC,gBAAiB,YAElB,kBAAC,IAAD,CACEJ,MAAO,CACLK,MAAO,QACPC,SAAU,GACVC,WAAY,SAJhB,cAUF,kBAAC,IAAD,CAAMP,MAAOQ,EAAOC,WACjB,kBAAC,IAAD,CACEC,YAAY,eACZV,MAAOQ,EAAOG,UACdC,aAAiB,SAAAC,GAAStB,EAASsB,IACnCvB,MAASA,EACTQ,IAAKA,IAEP,kBAAC,IAAD,CACEgB,QAvES,SAACC,GACC,IAATzB,IAGAM,EAAKF,QAELD,GAAS,SAAAuB,GAAS,OAAIA,EAAUC,KAAI,SAAAtB,GAChC,OAAGA,EAAKuB,IAAMtB,EAAKD,KAAKuB,IAErBvB,EAAKL,MAAQA,EACNK,GAIDA,QAIbJ,EAAS,IACTM,EAAQ,CAACH,QAAQ,EAAOC,KAAO,SAIhCF,GAAS,SAAAuB,GAAS,oBAAQA,GAAR,CAAmB,CAACE,KAAM/B,EAAOG,cACnDC,EAAS,KAEXO,EAAIqB,QAAQC,UA8CXpB,MAAO,CACLG,QAAS,GACTC,gBAAiB,OACjBH,eAAgB,SAChBC,WAAY,WAGZ,kBAAC,IAAD,CACCF,MAAO,CACLK,MAAO,UAGPT,EAAKF,OAAS,OAAS,UAIjC,kBAAC,IAAD,KACI,kBAAC,IAAD,CACG2B,KAAM7B,EACN8B,aAAgB,SAAC3B,EAAK4B,GAAN,OAAgB5B,EAAKuB,GAAGM,YACxCC,WAAY,gBAAE9B,EAAF,EAAEA,KAAF,OACP,kBAAC,IAAD,CACEK,MAAO,CACL0B,WAAY,GACZC,YAAa,GACbC,aAAc,GACdC,cAAe,QAGjB,kBAAC,IAAD,CACC7B,MAAO,CACLI,gBAAiB,UACjB0B,QAAS,OACTC,MAAO,OACPC,YAAa,GACb9B,WAAY,SACZyB,YAAa,KAEdhC,EAAKL,OACP,kBAAC,IAAD,CACEwB,QAAS,kBAnFV,SAAAnB,GACdJ,EAASI,EAAKL,OACdQ,EAAIqB,QAAQC,QACZvB,EAAQ,CAACH,QAAQ,EAAMC,SAgFKsC,CAAStC,IACtBK,MAAO,CACLI,gBAAiB,SACjBD,QAAS,EACTG,SAAU,GACV0B,YAAa,KAGf,kBAAC,IAAD,cAGF,kBAAC,IAAD,CACElB,QAAS,kBAzFRI,EAyFuBvB,EAAKuB,GAxF1CtB,IAEAL,EAAS,IACTM,EAAQ,CAACH,QAAQ,EAAMC,KAAM,aAEhCF,GAAS,SAAAuB,GAAS,OAAIA,EAAUkB,QAAO,SAAAvC,GAAI,OAAEA,EAAKuB,IAAMA,QANvC,IAAAA,GA0FDlB,MAAO,CACLI,gBAAiB,MACjBD,QAAS,EACTG,SAAU,KAGZ,kBAAC,IAAD,sBAWpB,IAAME,EAAS2B,IAAWC,OAAO,CAC/B3B,UAAW,CACToB,cAAe,OAEjBlB,UAAW,CACToB,MAAO,OACPM,OAAQ,GACRC,kBAAmB,EACnBC,kBAAmB,QACnBC,kBAAmB,W,4DCrKnB,kBAAmBC,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,oCAAqC,CAAEC,MAAO,gBACvDC,MAAK,SAASC,OAGdC,OAAM,SAASC,GACdC,QAAQH,KAAK,oCAAqCE,W","file":"static/js/app.8d342e84.chunk.js","sourcesContent":["import React, {useState, useRef} from 'react';\nimport { StyleSheet, Text, View, ScrollView, TextInput, TouchableOpacity, Button, Image, FlatList } from 'react-native';\n\nlet count = 0;\n\nexport default function App() { \n  \n  const [value, setValue] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [edit, setEdit] = useState({\n    status: false,\n    item: null\n  });\n\n  const ref = useRef();\n  \n  const addTodo = (e) => { \n        if(value == '') \n          return \n\n        if(edit.status)\n        {\n           setTodos(prevTodos => prevTodos.map(item => {\n               if(item.id == edit.item.id)\n               {\n                  item.value = value;\n                  return item;\n               } \n               else \n               {\n                 return item;\n               }\n            }));\n\n           setValue('');\n           setEdit({status: false, item : null});\n        }\n        else \n        {\n          setTodos(prevTodos => [...prevTodos, {id: ++count, value}]);\n          setValue('');\n        }\n        ref.current.focus();\n  }\n\n  const editTodo = item => {\n     setValue(item.value);\n     ref.current.focus(); \n     setEdit({status: true, item});\n  }\n\n  const deleteTodo = id => {\n    if(edit)\n    {\n       setValue('');\n       setEdit({status: false,item: null});   \n    }\n    setTodos(prevTodos => prevTodos.filter(item=>item.id != id));\n  }\n\n  return (\n    <>\n    <View style={{\n       justifyContent: 'center',\n       alignItems: 'center',\n       padding: 10,\n       backgroundColor: '#f79f11'\n    }}>\n      <Text\n        style={{\n          color: 'white',\n          fontSize: 30,\n          fontWeight: 'bold'\n        }}\n      >\n        Todo List\n      </Text>\n    </View>\n    <View style={styles.container}>\n       <TextInput\n         placeholder=\"Enter todo..\" \n         style={styles.textInput}\n         onChangeText = { text => {setValue(text)}}\n         value = {value}\n         ref={ref}\n       />\n       <TouchableOpacity\n         onPress={addTodo}\n         style={{\n           padding: 10,\n           backgroundColor: 'blue',\n           justifyContent: 'center',\n           alignItems: 'center'\n         }}\n       >\n           <Text\n            style={{\n              color: 'white'\n            }} \n           >\n             {edit.status ? \"Edit\" : \"Add+\"}\n           </Text>\n       </TouchableOpacity>\n    </View>\n    <ScrollView>\n        <FlatList\n           data={todos} \n           keyExtractor = {(item,index) => item.id.toString()} \n           renderItem={({item})=>\n                <View\n                  style={{\n                    paddingTop: 10,\n                    paddingLeft: 10,\n                    paddingRight: 10, \n                    flexDirection: 'row'\n                  }}\n                >\n                  <Text\n                   style={{\n                     backgroundColor: '#f5f5f5',\n                     display: 'flex',\n                     width: '100%',\n                     marginRight: 10,\n                     alignItems: 'center',\n                     paddingLeft: 10\n                   }}\n                  >{item.value}</Text>\n                  <TouchableOpacity\n                    onPress={()=>editTodo(item)}\n                    style={{\n                      backgroundColor: 'yellow',\n                      padding: 5, \n                      fontSize: 20,\n                      marginRight: 10\n                    }}\n                  >\n                    <Text>Edit</Text>\n                  </TouchableOpacity\n                  >\n                  <TouchableOpacity\n                    onPress={()=>deleteTodo(item.id)}\n                    style={{\n                      backgroundColor: 'red',\n                      padding: 5,\n                      fontSize: 20,\n                    }}\n                  >\n                    <Text>Delete</Text>\n                  </TouchableOpacity>\n                </View>\n           }\n           \n          />\n    </ScrollView>\n   </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  textInput: {\n    width: '100%',\n    height: 50,\n    borderBottomWidth: 2,\n    borderBottomStyle: 'solid',\n    borderBottomColor: 'blue'\n  }\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/Todo_list/expo-service-worker.js', { scope: '/Todo_list/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}